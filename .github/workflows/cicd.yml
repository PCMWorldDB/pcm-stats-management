name: PCM Stats CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  detect_branch_type:
    runs-on: ubuntu-latest
    outputs:
      branch_type: ${{ steps.detect.outputs.branch_type }}
    steps:
    - name: Detect branch type
      id: detect
      run: |
        if [[ "${{ github.head_ref || github.ref_name }}" == "change/"* ]]; then
          echo "branch_type=change" >> $GITHUB_OUTPUT
        else
          echo "branch_type=other" >> $GITHUB_OUTPUT
        fi

  process_changes:
    runs-on: ubuntu-latest
    needs: detect_branch_type
    if: ${{ needs.detect_branch_type.outputs.branch_type == 'change' }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: General setup validation
      run: |
        python -m src.pcm_cli validate-setup
    - name: Process all namespaces
      run: |
        python -m src.pcm_cli process-changes

  main_branch:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Validate setup
      run: |
        python -m src.pcm_cli validate-setup
